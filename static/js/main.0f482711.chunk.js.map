{"version":3,"sources":["components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/backdrop.module.css","containers/ChecklistBuilder/ChecklistBuilder.module.css","axios-orders.js","components/Checklist/Controls/control/control.js","components/Checklist/Controls/Controls.js","components/UI/Spinner/Spinner.js","hoc/auxiliary.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Checklist/OrderSummary/OrderSummary.js","containers/ChecklistBuilder/ChecklistBuilder.js","App.js","serviceWorker.js","index.js","components/Checklist/Controls/control/control.module.css","components/Checklist/Controls/Controls.module.css"],"names":["module","exports","instance","axios","create","baseURL","control","props","className","classes","Control","Label","onClick","details","productname","Less","removed","disabled","count","More","added","Controls","Price","totalPrice","totalCount","products","map","product","key","id","name","productDetails","productAdded","productRemoved","Spinner","loader","aux","children","Backdrop","show","clicked","Modal","nextProps","nextState","this","console","log","modalClosed","style","transform","opacity","Component","OrderSummary","orderSummary","Object","keys","proKey","textTransform","ChecklistBuilder","state","spinner","error","currentIndex","addProductHandler","updatedCount","updatedproducts","priceAdddition","parseInt","price","newPrice","newTotalCount","setState","removeProductHandler","oldCount","productDetailsHandler","detailCancelHandler","get","then","response","data","catch","controls","disabledInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0f482711.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1maQz\",\"load1\":\"Spinner_load1__2NO_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1ISa1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__2gC9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChecklistBuilder\":\"ChecklistBuilder_ChecklistBuilder__1buSr\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://5f33e9c1cfaf5a001646b758.mockapi.io/api/v0/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './control.module.css';\r\nconst control = (props) => {\r\n    return (\r\n        <div className={classes.Control}>\r\n        <div className={classes.Label} \r\n        onClick={props.details}\r\n        >{props.productname}</div>\r\n        <button className={classes.Less} \r\n        onClick={props.removed}\r\n        disabled={props.disabled}\r\n        >Less</button>\r\n        <h4>{props.count}</h4>\r\n        <button \r\n         className={classes.More}\r\n         onClick={props.added}\r\n         >More</button>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default control;","import React from 'react';\r\nimport Control from './control/control';\r\nimport classes from './Controls.module.css';\r\n\r\nconst Controls = (props) => {\r\n    return (\r\n        <div className={classes.Controls}>\r\n            <div className={classes.Price} >\r\n                <p>To Pay: <strong> INR {props.totalPrice}</strong> </p> \r\n                 <p>You have Selected <strong>{props.totalCount} items.</strong>  </p>\r\n            </div>\r\n            {\r\n                props.products.map(product => (\r\n                    <Control key={product.id}\r\n                     productname={product.name}\r\n                     details ={() => props.productDetails(product.id)}\r\n                     added={() => props.productAdded(product.id)}\r\n                     removed={() => props.productRemoved(product.id)}\r\n                     disabled ={props.disabled[product.id-1].count}\r\n                     count = {product.count} />\r\n                ))\r\n            }\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Controls;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={classes.loader}>\r\n            Loading...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","const aux = props => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport classes from './backdrop.module.css';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n       return nextProps.show !== this.props.show ;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"modal will update\");\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n            <div className={classes.Modal}\r\n        style={{\r\n            transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity: this.props.show ? '1': '0'\r\n        }}>\r\n            {this.props.children}\r\n        </div>\r\n        </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/auxiliary';\r\nimport classes from './OrderSummary.module.css';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    componentDidUpdate () {\r\n        console.log(\"ordered summary will update\");\r\n    }\r\n\r\n    render () {\r\n\r\n        const orderSummary = Object.keys(this.props.product)\r\n        .map(proKey => {\r\n            if(proKey !== 'id' && proKey !== 'count' && proKey !== 'createdAt'){\r\n                return <li key={proKey}>\r\n                 <span style={{textTransform: 'capitalize'}}>{proKey}</span>: {this.props.product[proKey]}\r\n               </li>\r\n            }\r\n        \r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n            <h3>Product Description</h3>\r\n            <p>An awesome product with the following details:</p>\r\n            <ul >\r\n                {orderSummary}\r\n            </ul>\r\n           \r\n        </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default OrderSummary;","import React, { Component } from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Controls from '../../components/Checklist/Controls/Controls';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderedSummary from '../../components/Checklist/OrderSummary/OrderSummary';\r\nimport Aux from '../../hoc/auxiliary';\r\nimport classes from './ChecklistBuilder.module.css';\r\n\r\nclass ChecklistBuilder extends Component {\r\n\r\n    state = {\r\n        products: null,\r\n        totalPrice: 0,\r\n        spinner: true,\r\n        error: false,\r\n        details: false,\r\n        currentIndex: 0,\r\n        totalCount: 0\r\n      }\r\n\r\n    componentDidMount () {\r\n        axios.get('product')\r\n        .then(response => {\r\n\r\n            const products = response.data;\r\n           \r\n            const updatedproducts = products.map(product => {\r\n                return {\r\n                    ...product,\r\n                    count: 0\r\n                }\r\n            });\r\n\r\n            this.setState({products: updatedproducts});\r\n            this.setState({spinner: false});\r\n            \r\n        })\r\n        .catch(error => {\r\n        //    console.log(error);\r\n           this.setState({spinner: false});\r\n           this.setState({error: true})\r\n         } );\r\n    }\r\n   \r\n\r\n    addProductHandler = (id) => {\r\n        const oldCount = this.state.products[id-1].count;\r\n        const updatedCount = oldCount + 1;\r\n\r\n        const products = [...this.state.products];\r\n       \r\n        const updatedproducts = products.map(product => {\r\n            return {\r\n                ...product,\r\n            }\r\n        });\r\n        updatedproducts[id-1].count = updatedCount;\r\n        const priceAdddition = parseInt(updatedproducts[id-1].price);\r\n            const oldPrice = this.state.totalPrice;\r\n            const newPrice = oldPrice + priceAdddition;\r\n\r\n        const oldTotalCount = this.state.totalCount;\r\n        const newTotalCount = oldTotalCount + 1;\r\n\r\n        this.setState({totalPrice: newPrice, products: updatedproducts, totalCount: newTotalCount})\r\n    }\r\n\r\n    removeProductHandler = (id) => {\r\n        const oldCount = this.state.products[id-1].count;\r\n        if (oldCount <= 0) {\r\n                    return;\r\n                }\r\n        const updatedCount = oldCount - 1;\r\n\r\n        const products = [...this.state.products];\r\n        const updatedproducts = products.map(product => {\r\n            return {\r\n                ...product\r\n            }\r\n        });\r\n        updatedproducts[id-1].count = updatedCount;\r\n        const priceAdddition = parseInt(updatedproducts[id-1].price);\r\n            const oldPrice = this.state.totalPrice;\r\n            const newPrice = oldPrice - priceAdddition;\r\n\r\n            const oldTotalCount = this.state.totalCount;\r\n            const newTotalCount = oldTotalCount - 1;\r\n\r\n        this.setState({totalPrice: newPrice, products: updatedproducts, totalCount: newTotalCount})\r\n    }\r\n \r\n productDetailsHandler = (id) => {\r\n     this.setState({currentIndex: id-1, details: true});\r\n }\r\n\r\n    detailCancelHandler = () => {\r\n        this.setState({details: false});\r\n    }\r\n\r\n    render() {\r\n        \r\n\r\n        let controls = this.state.error ? <h1>Something went wrong !!!</h1> : <Spinner />\r\n        let orderSummary = null;\r\n\r\n        if(this.state.products){\r\n\r\n            const disabledInfo1 = [...this.state.products];\r\n       \r\n            const disabledInfo = disabledInfo1.map(product => {\r\n                return {\r\n                    ...product\r\n                }\r\n            });\r\n          \r\n            for (let key in disabledInfo) {\r\n                disabledInfo[key].count = disabledInfo[key].count <= 0\r\n            }\r\n\r\n         \r\n\r\n            controls = (<Controls\r\n                        totalPrice = {this.state.totalPrice}\r\n                        totalCount = {this.state.totalCount}\r\n                        disabled = {disabledInfo}\r\n                         productAdded = {this.addProductHandler}\r\n                         productRemoved = {this.removeProductHandler}\r\n                         productDetails = {this.productDetailsHandler}\r\n                         products={this.state.products} />);\r\n\r\n        orderSummary = <OrderedSummary \r\n                         product={this.state.products[this.state.currentIndex]}\r\n            \r\n                         />;\r\n\r\n                       \r\n\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <div className ={classes.ChecklistBuilder} >\r\n                <header>SHOPING LIST</header>\r\n                <Modal show={this.state.details} modalClosed={this.detailCancelHandler}>\r\n                   {orderSummary}\r\n                </Modal>\r\n                \r\n                {controls}\r\n            </div>\r\n            </Aux>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ChecklistBuilder;","import React from 'react';\nimport './App.css';\nimport ChecklistBuilder from './containers/ChecklistBuilder/ChecklistBuilder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ChecklistBuilder />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Control\":\"control_Control__2tk3x\",\"Label\":\"control_Label__2NtHu\",\"Less\":\"control_Less__yBP9S\",\"More\":\"control_More__2EVK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"Controls_Controls__2I8dE\",\"Price\":\"Controls_Price__2WcYe\"};"],"sourceRoot":""}